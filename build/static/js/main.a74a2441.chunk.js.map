{"version":3,"sources":["HotdogRocketWhite.png","components/Navbar.js","components/TokenCreator.js","components/Main.js","components/App.js","serviceWorker.js","components/AboutUs.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","src","hotdogrocket","width","height","alt","class","react_router_dom","to","id","this","props","account","ChainName","Component","TokenCreator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","createDecryptinZToken","tokenName","tokenSymbol","tokenSupply","reflectionFee","burnFee","charityFee","charityAddress","_maxTransferAmountRate","window","web3","eth","Contract","Builder","state","console","log","setState","loading","builderContract","methods","send","from","value","on","hash","builderContractAddress","botContract","contractBalance","bnbBalance","_ApproveToken","loadWeb3","loadBlockchainData","getAccounts","accounts","toString","net","getId","networkId","currency","_address","ethereum","Web3","enable","currentProvider","alert","_this2","components_Navbar","onSubmit","event","preventDefault","e","type","placeholder","ref","Main","App","botContractAddress","content","components_Main","Boolean","location","hostname","match","ReactDOM","render","react_router","exact","path","component","AboutUs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a74a2441.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HotdogRocketWhite.26cce1a2.png\";","import React, { Component } from 'react'\r\nimport hotdogrocket from '../HotdogRocketWhite.png'\r\nimport { BrowserRouter, Route, withRouter, Switch } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nclass Navbar extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar\">\r\n           <img src={hotdogrocket} width=\"150\" height=\"80\"  alt=\"\" />\r\n      &nbsp; \r\n        \r\n        <div class=\"topnav\">\r\n          <div className=\"navLinks\">\r\n        <Link to=\"/TokenCreator\">Generate a Token</Link>\r\n              <Link to=\"/AboutUs\">About Us</Link>\r\n              </div>\r\n    \r\n              \r\n         \r\n       \r\n\r\n        </div>\r\n        <small className=\"navAccountInfo\" >\r\n          <small id=\"account\" >{this.props.account}</small>    <br></br>\r\n          <small id=\"ChainName\" > Connected Network : {this.props.ChainName}</small>    \r\n        </small>\r\n  </nav>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react'\r\nimport '../css/App.css'\r\nimport '../css/TokenCreator.css'\r\nimport Web3 from 'web3'\r\nimport Navbar from './Navbar'\r\nimport Builder from'../abis/Builder.json'\r\n\r\nclass TokenCreator extends Component {\r\n  async componentWillMount(){\r\n    await this .loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n  \r\n  \r\n  async loadBlockchainData(){\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account: accounts[0]})\r\n    console.log(accounts.toString())\r\n  \r\n    const networkId = await web3.eth.net.getId()\r\n    switch(networkId) {\r\n      case 56:\r\n        console.log(\"Binance Smart Chain Detected\")\r\n        this.setState({ChainName: \"Binance Smart Chain\"})\r\n        this.setState({currency: \"BNB\"})\r\n  \r\n        break;\r\n      case 1:\r\n        console.log(\"Ethereum Mainnet Detected\")\r\n        this.setState({ChainName: \"Ethereum Mainnet\"})\r\n        this.setState({currency: \"ETH\"})\r\n        break;\r\n  \r\n      case 97:\r\n        console.log(\"BSC Testnet Detected\")\r\n        this.setState({ChainName: \"BSC Testnet\"})\r\n        this.setState({currency: \"TestBNB\"})\r\n        const builderContract = new web3.eth.Contract(Builder, '0x2a95EB67E184BA5715FDf294670ae59459a3D25B')\r\n        break;\r\n      default:\r\n        // code block\r\n    }\r\n    console.log(networkId)\r\n\r\n\r\n\r\n      //Loading Token Generator Contract (Builder)\r\n\r\n      const builderContract = new web3.eth.Contract(Builder, '0xcD25e5e4D39DCCb39d273914d6ed10D405CB9Ce8')\r\n\r\n      this.setState({builderContractAddress : builderContract._address})\r\n      this.setState({ builderContract })\r\n      console.log(builderContract._address)\r\n\r\n\r\n  }\r\n\r\n  //----------------createToken\r\n  createDecryptinZToken =(tokenName,tokenSymbol,tokenSupply,reflectionFee,burnFee,charityFee,charityAddress,_maxTransferAmountRate) =>{\r\n  const web3 = window.web3\r\n  const builderContract = new web3.eth.Contract(Builder, '0xcD25e5e4D39DCCb39d273914d6ed10D405CB9Ce8')\r\n  let account = this.state.account\r\n  console.log(account)\r\n  this.setState({loading: true})\r\n\r\n  this.state.builderContract.methods.createDecryptinZToken(tokenName,tokenSymbol,9,tokenSupply,reflectionFee,burnFee,charityFee,charityAddress,account, _maxTransferAmountRate).send({from: this.state.account, value:'300000000000000000'}).on('transactionHash', (hash) => {\r\n \r\n    this.setState({loading: false})\r\n})\r\n\r\n\r\n}\r\n  \r\n  \r\n  //Load Web3\r\n  async loadWeb3() {\r\n    if(window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n\r\n    else if (window.web3)\r\n    {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else{\r\n      window.alert('Non-Ethereum browser detected. You should consider trying metamask')\r\n    }\r\n    this.setState({loading: false});\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ChainName:\"\",\r\n      account: '0x0',\r\n      builderContractAddress: '0x0',\r\n      botContract:{},\r\n      contractBalance:\"\",\r\n      bnbBalance: '0',\r\n      _ApproveToken:'',\r\n      loading: true\r\n    }\r\n  }\r\nrender()\r\n\r\n{\r\nreturn(\r\n  \r\n  <div id=\"bodySection\" className=\"bodySection\">\r\n    <Navbar account={this.state.account} ChainName={this.state.ChainName} />\r\n    \r\n    <div className =\"shellCompressor\">\r\n      \r\n      <div className=\"groupingShell\">\r\n    \r\n        <div className=\"itemsInShell\">\r\n          \r\n      {/* Form bnbBuyAndCustomRoute */}\r\n      <form className =\"createDecryptinZToken\" onSubmit={(event)=> {\r\n                  event.preventDefault()\r\n\r\n\r\n           \r\n                  let tokenName = this.tokenName.value;\r\n                  let tokenSymbol = this.tokenSymbol.value;\r\n                  let tokenSupply = this.tokenSupply.value;\r\n                  let reflectionFee = this.reflectionFee.value;\r\n                  let burnFee = this.burnFee.value;\r\n                  let charityFee = this.charityFee.value;\r\n                  let charityAddress = this.charityAddress.value;\r\n                  let _maxTransferAmountRate = this._maxTransferAmountRate.value;\r\n       \r\n                try{\r\n                \r\n                   this.createDecryptinZToken(tokenName,tokenSymbol,tokenSupply,reflectionFee,burnFee,charityFee,charityAddress,_maxTransferAmountRate)\r\n                }\r\n                catch(e)\r\n                {\r\n\r\n                  alert(e)\r\n\r\n                }\r\n                  \r\n                }}>\r\n\r\n                  {/* bnbBuyCustomRoute */}\r\n                  \r\n                  <div className=\"bnbBuyCustomRoute\">\r\n                  <div className =\"lblTitle\">\r\n      <label>Generating Token for {this.state.ChainName}</label> </div><br/>\r\n                  <div className=\"left\"> \r\n                 \r\n             \r\n                <label className=\"lblsubTitleStyle\" > Token Name:</label> <br/>\r\n                <input type = \"text\" id=\"txtTokenName\" placeholder=\"e.g. Ethereum\" ref={(tokenName)=> {this.tokenName = tokenName}}></input>\r\n                <br></br>\r\n                <label className=\"lblsubTitleStyle\" > Token Symbol: </label> <br/>\r\n                <input type = \"text\" id=\"txtTokenAddress\"  placeholder=\"ETH\" ref={(tokenSymbol)=> {this.tokenSymbol = tokenSymbol}}></input>\r\n          <br></br>\r\n              <label className=\"lblsubTitleStyle\" >Supply: </label> <br/>\r\n                <input type = \"text\" id=\"txtBnbAmount\" placeholder=\"10000\" ref={(tokenSupply)=> {this.tokenSupply = tokenSupply}}></input>\r\n                <br></br>\r\n                <label className=\"lblsubTitleStyle\" > Reflection Fee: </label> <br/>\r\n                <input type = \"text\" id=\"txtAddressesArray\"  placeholder=\"0\" ref={(reflectionFee)=> {this.reflectionFee = reflectionFee}}></input>\r\n                <br></br>\r\n                <label className=\"lblsubTitleStyle\" > Burn Fee: </label> <br/>\r\n                <input type = \"text\" id=\"txtBNBAmount\" placeholder=\"0\" ref={(burnFee)=> {this.burnFee = burnFee}}></input>\r\n               </div>\r\n                <div className=\"right\"> \r\n                \r\n                <br></br>\r\n                <label className=\"lblsubTitleStyle\" > Charity Fee: </label> <br/>\r\n                <input type = \"text\" id=\"txtTokenAddress\"  placeholder=\"0x0\" ref={(charityFee)=> {this.charityFee = charityFee}}></input>\r\n      <br></br>\r\n      <br></br>\r\n              <label className=\"lblsubTitleStyle\" >Charity Address: </label> <br/>\r\n                <input type = \"text\" id=\"txtBnbAmount\" placeholder=\"0x0\" ref={(charityAddress)=> {this.charityAddress = charityAddress}}></input>\r\n                <br></br>\r\n                <br></br>\r\n                <label className=\"lblsubTitleStyle\" >Max Transaction Rate (%) </label> <br/>\r\n                <input type = \"text\" id=\"txtBnbAmount\" placeholder=\"%\" ref={(_maxTransferAmountRate)=> {this._maxTransferAmountRate = _maxTransferAmountRate}}></input>\r\n                <br></br>\r\n                <br></br>\r\n                <button type =\"submit\" id ='btnBuy'className=\"buttonLayouts\">Generate Token</button>\r\n                {/* <label className=\"lblsubTitleStyle\" > Addresses </label> <br/>\r\n                <input type = \"text\" id=\"txtAddressesArray\"  placeholder=\"0x0\" ref={(bnbCustomAddressAray)=> {this.bnbCustomAddressAray = bnbCustomAddressAray}}></input> */}\r\n                </div>\r\n                </div>\r\n\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n      </div>\r\n      <div className =\"shellCompressor\">\r\n      \r\n      <div className=\"groupingShell\">\r\n    \r\n        <div className=\"itemsInShell\">\r\n\r\n                  {/* bnbBuyCustomRoute */}\r\n                  \r\n                  <div className=\"bnbBuyCustomRoute\">\r\n                  <div className =\"lblTitle\">\r\n                  <label>GENERATE YOUR OWN TOKEN WITH 3 EASY STEPS!</label> </div><br/>\r\n                  <label className=\"lblNoteTitle\" > Step 1 :</label> <br></br>\r\n                  <label className=\"lblsubTitleStyle\" >Fill in the Token Generation Form </label> <br/><br/>\r\n                  <label className=\"lblNoteTitle\" > Step 2 :</label> <br></br>\r\n                  <label className=\"lblsubTitleStyle\" >Click on the \"Generate Token Button\" </label> <br/><br/>\r\n                  <label className=\"lblNoteTitle\" > Step 3 :</label> <br></br>\r\n                  <label className=\"lblsubTitleStyle\" >Confirm Transaction on Metamask </label> <br/><br/>\r\n                  <label className=\"lblNoteTitle\" > NOTE:</label> <br></br>\r\n                  <label className=\"lblsubTitleStyle\" > Tokens Generated will have its contract Auto Verified! </label> <br/>\r\n                  <label className=\"lblsubTitleStyle\" > A Fee of 0.3 BNB will be charged for the creation of token (Exclusive of Gas fees) </label> <br/><br/>\r\n                {/* <label className=\"lblsubTitleStyle\" > Addresses </label> <br/>\r\n                <input type = \"text\" id=\"txtAddressesArray\"  placeholder=\"0x0\" ref={(bnbCustomAddressAray)=> {this.bnbCustomAddressAray = bnbCustomAddressAray}}></input> */}\r\n                </div>\r\n            \r\n\r\n                \r\n                    </div>\r\n                </div>\r\n                </div>\r\n      </div>\r\n\r\n\r\n\r\n);\r\n}\r\n}\r\nexport default TokenCreator;","import React, { Component } from 'react'\r\nimport '../css/App.css'\r\nimport Web3 from 'web3'\r\nimport TokenCreator from './TokenCreator.js'\r\n\r\nimport { BrowserRouter, Route, withRouter, Switch } from 'react-router-dom'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass Main extends Component {\r\n\r\nrender(){\r\nreturn(\r\n  <div id=\"bodySection\" className=\"bodySection\">\r\n    <p > Hello World!</p>\r\n    <p > Hello World!</p>\r\n    <p > Hello World!</p>\r\n    <p > Hello World!</p>\r\n\r\n    \r\n       \r\n      \r\n\r\n    </div>\r\n);\r\n}\r\n}\r\nexport default Main;","import React, { Component } from 'react'\r\nimport Navbar from './Navbar'\r\nimport Web3 from 'web3'\r\nimport '../css/App.css'\r\nimport '../css/Main.css'\r\nimport Main from './Main.js'\r\nimport TokenCreator from './TokenCreator.js'\r\n\r\nimport { BrowserRouter, Route, withRouter, Switch } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass App extends Component {\r\n\r\nasync componentWillMount(){\r\n  await this .loadWeb3()\r\n  await this.loadBlockchainData()\r\n}\r\n\r\n\r\nasync loadBlockchainData(){\r\n  const web3 = window.web3\r\n  const accounts = await web3.eth.getAccounts()\r\n  this.setState({account: accounts[0]})\r\n\r\n  const networkId = await web3.eth.net.getId()\r\n  switch(networkId) {\r\n    case 56:\r\n      console.log(\"Binance Smart Chain Detected\")\r\n      this.setState({ChainName: \"Binance Smart Chain\"})\r\n      this.setState({currency: \"BNB\"})\r\n\r\n      break;\r\n    case 1:\r\n      console.log(\"Ethereum Mainnet Detected\")\r\n      this.setState({ChainName: \"Ethereum Mainnet\"})\r\n      this.setState({currency: \"ETH\"})\r\n      break;\r\n\r\n    case 97:\r\n      console.log(\"BSC Testnet Detected\")\r\n      this.setState({ChainName: \"BSC Testnet\"})\r\n      this.setState({currency: \"TestBNB\"})\r\n      break;\r\n    default:\r\n      // code block\r\n  }\r\n  console.log(networkId)\r\n    \r\n \r\n   \r\n}\r\n  \r\n //Load Web3\r\n  async loadWeb3() {\r\n    if(window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n\r\n    else if (window.web3)\r\n    {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else{\r\n      window.alert('Non-Ethereum browser detected. You should consider trying metamask')\r\n    }\r\n    this.setState({loading: false});\r\n  }\r\n  /** -------------------------------------------------------------------------------------------------------------------**/\r\n\r\n\r\n\r\n\r\n  /** ---------------------------------------------------------------------------------------------------------------------------------------------**/\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ChainName:\"\",\r\n      account: '0x0',\r\n      botContractAddress: '0x0',\r\n      botContract:{},\r\n      contractBalance:\"\",\r\n      bnbBalance: '0',\r\n      _ApproveToken:'',\r\n      loading: true\r\n    }\r\n  }\r\n\r\n\r\n  //HTML\r\n  render() {\r\n    let content \r\n\r\n    if(this.state.loading){\r\n      content = <p id=\"loader\" className =\"text-center\">Loading...</p>\r\n\r\n      \r\n    }\r\n    else{\r\n      content = <Main/>\r\n      \r\n    }\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n           <Navbar account={this.state.account} ChainName={this.state.ChainName} />\r\n       \r\n        {content}\r\n    \r\n           </div>\r\n    );\r\n \r\n}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport '../css/App.css'\r\nimport Web3 from 'web3'\r\nimport Navbar from './Navbar'\r\nclass TokenCreator extends Component {\r\n  async componentWillMount(){\r\n    await this .loadWeb3()\r\n    await this.loadBlockchainData()\r\n  }\r\n  \r\n  \r\n  async loadBlockchainData(){\r\n    const web3 = window.web3\r\n    const accounts = await web3.eth.getAccounts()\r\n    this.setState({account: accounts[0]})\r\n  \r\n    const networkId = await web3.eth.net.getId()\r\n    switch(networkId) {\r\n      case 56:\r\n        console.log(\"Binance Smart Chain Detected\")\r\n        this.setState({ChainName: \"Binance Smart Chain\"})\r\n        this.setState({currency: \"BNB\"})\r\n  \r\n        break;\r\n      case 1:\r\n        console.log(\"Ethereum Mainnet Detected\")\r\n        this.setState({ChainName: \"Ethereum Mainnet\"})\r\n        this.setState({currency: \"ETH\"})\r\n        break;\r\n  \r\n      case 97:\r\n        console.log(\"BSC Testnet Detected\")\r\n        this.setState({ChainName: \"BSC Testnet\"})\r\n        this.setState({currency: \"TestBNB\"})\r\n        break;\r\n      default:\r\n        // code block\r\n    }\r\n    console.log(networkId)\r\n  }\r\n\r\n  //Load Web3\r\n  async loadWeb3() {\r\n    if(window.ethereum) {\r\n      window.web3 = new Web3(window.ethereum)\r\n      await window.ethereum.enable()\r\n    }\r\n\r\n    else if (window.web3)\r\n    {\r\n      window.web3 = new Web3(window.web3.currentProvider)\r\n    }\r\n    else{\r\n      window.alert('Non-Ethereum browser detected. You should consider trying metamask')\r\n    }\r\n    this.setState({loading: false});\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      ChainName:\"\",\r\n      account: '0x0',\r\n      botContractAddress: '0x0',\r\n      botContract:{},\r\n      contractBalance:\"\",\r\n      bnbBalance: '0',\r\n      _ApproveToken:'',\r\n      loading: true\r\n    }\r\n  }\r\nrender()\r\n\r\n{\r\nreturn(\r\n  \r\n  <div id=\"bodySection\" className=\"bodySection\">\r\n     <Navbar account={this.state.account} />\r\n    <p > Hello World!</p>\r\n    <p > Hell222o World!</p>\r\n    <p > Hello22 World!</p>\r\n    <p > Hell22asasasa2o World!</p> \r\n    </div>\r\n);\r\n}\r\n}\r\nexport default TokenCreator;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport TokenCreator from './components/TokenCreator.js';\r\nimport { BrowserRouter, Route, IndexRoute,Switch } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\nimport AboutUs from './components/AboutUs.js';\r\n\r\nReactDOM.render(\r\n\r\n    \r\n    <div>\r\n        <BrowserRouter>\r\n      <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n           <Route path=\"/TokenCreator\" component={TokenCreator} />\r\n\r\n           <Route path=\"/AboutUs\" component={AboutUs} />\r\n\r\n           </Switch>\r\n           </BrowserRouter>\r\n           </div>\r\n      \r\n       ,\r\n\r\n\r\n\r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}